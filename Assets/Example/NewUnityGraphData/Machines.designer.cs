// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Invert.StateMachine;


public class SomeStateMachine : Invert.StateMachine.StateMachine {
    
    private Invert.StateMachine.StateMachineTrigger _IsFrank;
    
    private Idle _Idle;
    
    public SomeStateMachine(uFrame.MVVM.ViewModel vm, string propertyName) : 
            base(vm, propertyName) {
    }
    
    public SomeStateMachine() : 
            base(null, string.Empty) {
    }
    
    public override Invert.StateMachine.State StartState {
        get {
            return this.Idle;
        }
    }
    
    public virtual Invert.StateMachine.StateMachineTrigger IsFrank {
        get {
            if (this._IsFrank == null) {
                this._IsFrank = new StateMachineTrigger(this , "IsFrank");
            }
            return _IsFrank;
        }
        set {
            _IsFrank = value;
        }
    }
    
    public virtual Idle Idle {
        get {
            if (this._Idle == null) {
                this._Idle = new Idle();
            }
            return _Idle;
        }
        set {
            _Idle = value;
        }
    }
    
    public override void Compose(System.Collections.Generic.List<Invert.StateMachine.State> states) {
        base.Compose(states);
        Idle.StateMachine = this;
        states.Add(Idle);
    }
}

public class Idle : Invert.StateMachine.State {
    
    public override string Name {
        get {
            return "Idle";
        }
    }
}
